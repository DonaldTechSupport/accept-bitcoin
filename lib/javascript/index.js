// Generated by CoffeeScript 1.6.3
var Key, Main, Transaction, bitcore, ee, extend, fs, http;

http = require('http');

bitcore = require('bitcore');

Key = require('./key');

Transaction = require('./transaction');

fs = require('fs');

ee = require('events').EventEmitter;

Main = (function() {
  var settings;

  settings = {
    network: bitcore.networks.testnet,
    password: 'enter_your_password_here',
    storePath: './keys.json',
    encryptPrivateKey: false,
    payToAddress: 'n3CDcrQExa956Juv4jf5L59YNAxhKAWnMY',
    payReminderToAddress: null,
    includeUnconfirmed: false,
    checkTransactionEvery: 4000,
    checkTransactionMaxAttempts: 10,
    minimumConfirmations: 6
  };

  function Main(address, o) {
    var key, tx,
      _this = this;
    if (o == null) {
      o = {};
    }
    if (!address) {
      return 'must have address';
    }
    ee.call(this);
    console.log('hello ' + address);
    this.settings = extend(settings, o);
    key = new Key(this.settings, 'mndB5QpRPu8GDudQqgpjB73vFWHENjYWxT', '1637672f6705d8fb439fd52da622bad49ddb340b64182b795fc3a8d0d4667ecf');
    tx = new Transaction(key, this.settings);
    tx.checkBalance(function(err, d) {
      console.log('here?');
      console.log(err, d);
      return _this.emit('foo', d);
    });
  }

  return Main;

})();

extend = function(object, properties) {
  var key, val;
  for (key in properties) {
    val = properties[key];
    object[key] = val;
  }
  return object;
};

Main.prototype.__proto__ = ee.prototype;

module.exports = Main;
