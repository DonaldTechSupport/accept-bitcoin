// Generated by CoffeeScript 1.6.3
(function() {
  var Key, Main, Transaction, bitcore, ee, extend, fs, http;

  http = require('http');

  bitcore = require('bitcore');

  Key = require('./key');

  Transaction = require('./transaction');

  fs = require('fs');

  ee = require('events').EventEmitter;

  Main = (function() {
    var settings;

    settings = {
      network: bitcore.networks.testnet,
      password: 'enter_your_password_here',
      storePath: './keys.json',
      encryptPrivateKey: false,
      payToAddress: 'n3CDcrQExa956Juv4jf5L59YNAxhKAWnMY',
      payReminderToAddress: null,
      includeUnconfirmed: false,
      checkTransactionEvery: 120000,
      checkTransactionMaxAttempts: 10,
      minimumConfirmations: 6
    };

    function Main(address, o) {
      if (o == null) {
        o = {};
      }
      if (!address) {
        return 'must have address';
      }
      ee.call(this);
      console.log('hello ' + address);
      this.settings = extend(settings, o);
    }

    Main.prototype.generateKey = function(cb) {
      return new Key(this.settings);
    };

    return Main;

  })();

  extend = function(object, properties) {
    var key, val;
    for (key in properties) {
      val = properties[key];
      object[key] = val;
    }
    return object;
  };

  Main.prototype.__proto__ = ee.prototype;

  module.exports = Main;

}).call(this);
