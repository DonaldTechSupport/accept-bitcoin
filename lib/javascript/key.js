// Generated by CoffeeScript 1.6.3
var Key, bitcore, crypt, fs;

bitcore = require('bitcore');

crypt = require('./encrypt');

fs = require('fs');

Key = (function() {
  function Key(settings) {
    this.settings = settings;
    this.wk = new bitcore.WalletKey({
      network: this.settings.network
    });
    this.wk.generate();
    this.storeKey();
  }

  Key.prototype.wk = function() {
    return this.wk;
  };

  Key.prototype.address = function() {
    return this.wk.storeObj().addr;
  };

  Key.prototype.printKey = function(wk) {
    var wkObj;
    if (wk == null) {
      wk = this.wk;
    }
    console.log("## Network: " + wk.network.name);
    console.log("*** Hex Representation");
    console.log("Private: " + bitcore.buffertools.toHex(wk.privKey["private"]));
    console.log("Public : " + bitcore.buffertools.toHex(wk.privKey["public"]));
    console.log("Public Compressed : " + (wk.privKey.compressed ? "Yes" : "No"));
    wkObj = wk.storeObj();
    console.log("*** WalletKey Store Object");
    console.log("Private: " + wkObj.priv);
    console.log("Public : " + wkObj.pub);
    return console.log("Addr   : " + wkObj.addr);
  };

  Key.prototype.storeKey = function(wk) {
    var privateKey, wkObj;
    if (wk == null) {
      wk = this.wk;
    }
    wkObj = wk.storeObj();
    privateKey = this.settings.encryptPrivateKey ? crypt.encrypt(bitcore.buffertools.toHex(wk.privKey["private"]), this.settings.password) : bitcore.buffertools.toHex(wk.privKey["private"]);
    return fs.appendFileSync(this.settings.storePath, wkObj.addr + "|" + bitcore.buffertools.toHex(wk.privKey["public"]) + "|" + privateKey + "\n");
  };

  Key.prototype.readKeys = function() {
    var lines;
    lines = fs.readFileSync(this.settings.storePath).toString().split("\n");
    return console.log(lines);
  };

  return Key;

})();

module.exports = Key;
