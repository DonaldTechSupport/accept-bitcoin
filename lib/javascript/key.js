// Generated by CoffeeScript 1.6.3
var Key, bitcore, fs;

bitcore = require('bitcore');

fs = require('fs');

Key = (function() {
  function Key(o) {
    if (o == null) {
      o = {};
    }
    this.storePath = o.storePath || './keys.json';
    this.wk = new bitcore.WalletKey(o);
    this.wk.generate();
    this.printKey();
    this.storeKey();
  }

  Key.prototype.key = function() {
    return this.wk;
  };

  Key.prototype.printKey = function(wk) {
    var wkObj;
    if (wk == null) {
      wk = this.wk;
    }
    console.log('xxxxwk');
    console.log("## Network: " + wk.network.name);
    console.log("*** Hex Representation");
    console.log("Private: " + bitcore.buffertools.toHex(wk.privKey["private"]));
    console.log("Public : " + bitcore.buffertools.toHex(wk.privKey["public"]));
    console.log("Public Compressed : " + (wk.privKey.compressed ? "Yes" : "No"));
    wkObj = wk.storeObj();
    console.log("*** WalletKey Store Object");
    console.log("Private: " + wkObj.priv);
    console.log("Public : " + wkObj.pub);
    return console.log("Addr   : " + wkObj.addr);
  };

  Key.prototype.storeKey = function(wk) {
    if (wk == null) {
      wk = this.wk;
    }
    console.log('storePath', this.storePath);
    return fs.appendFileSync(this.storePath, '223asda|affsd33dsf|dsflklcaf' + "\n");
  };

  Key.prototype.readKeys = function() {
    var lines;
    lines = fs.readFileSync(this.storePath).toString().split("\n");
    return console.log(lines);
  };

  return Key;

})();

module.exports = Key;
